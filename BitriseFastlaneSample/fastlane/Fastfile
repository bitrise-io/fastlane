# Customise this file, documentation can be found here:
# https://github.com/KrauseFx/fastlane/tree/master/docs
# All available actions: https://github.com/KrauseFx/fastlane/blob/master/docs/Actions.md
# can also be listed using the `fastlane actions` command

# Change the syntax highlighting to Ruby
# All lines starting with a # are ignored when running `fastlane`

# By default, fastlane will send which actions are used
# No personal data is shared, more information on https://github.com/fastlane/enhancer
# Uncomment the following line to opt out
# opt_out_usage

# If you want to automatically update fastlane if a new version is available:
# update_fastlane

# This is the minimum version number required.
# Update this, if you use features of a newer version
fastlane_version "1.49.0"

default_platform :ios


platform :ios do
  before_all do
    # ENV["SLACK_URL"] = "https://hooks.slack.com/services/..."


    # increment_build_number

    # xctool # run the tests of your app
  end

  desc "Runs all the tests"
  lane :test do
    xctest(
      scheme: "BitriseFastlaneSample",
      destination: "name=iPhone 5s,OS=latest"
    )
    scan(
      scheme: "BitriseFastlaneSample",
      destination: "name=iPhone 5s,OS=latest",
      output_directory: ENV['BITRISE_DEPLOY_DIR']
    )

    snapshot
  end

  desc "Submit a new Beta Build to Apple TestFlight"
  desc "This will also make sure the profile is up to date"
  lane :beta do
    # sigh
    gym(scheme: "BitriseFastlaneSample") # Build your app - more options available
    pilot

    # sh "your_script.sh"
    # You can also use other beta testing services here
  end

  desc "Deploy a new version to the App Store"
  lane :deploy do
    snapshot
    # sigh
    gym(scheme: "BitriseFastlaneSample") # Build your app - more options available
    # deliver(force: true)
    # frameit
  end

  lane :build_and_archive do |options|
    gym(
      scheme: "BitriseFastlaneSample",
      provisioning_profile_path: ENV['BITRISE_PROVISION_URL'],
      configuration: "Release",
      output_name: "BitriseFastlaneSample"
    )

  end

  lane :publish do |options|
    crashlytics(
      crashlytics_path: './Crashlytics.framework',
      api_token: ENV['CRASHLYTICS_API_TOKEN'],
      build_secret: ENV['CRASHLYTICS_BUILD_SECRET'],
      ipa_path: "#{ENV['BITRISE_DEPLOY_DIR']}/BitriseFastlaneSample.ipa"
    )
  end

  # You can define as many lanes as you want

  after_all do |lane|
    # This block is called, only if the executed lane was successful

    # slack(
    #   message: "Successfully deployed new App Update."
    # )
  end

  error do |lane, exception|
    # slack(
    #   message: exception.message,
    #   success: false
    # )
  end
end



# More information about multiple platforms in fastlane: https://github.com/KrauseFx/fastlane/blob/master/docs/Platforms.md
# All available actions: https://github.com/KrauseFx/fastlane/blob/master/docs/Actions.md
